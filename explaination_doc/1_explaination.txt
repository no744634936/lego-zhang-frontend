
1,写views文件夹里的三个页面，
  写views 里面的三个页面时，
  先把页面布局一个一个导入到Index.vue 里面看看页面效果
  给页面里的按钮添加link使之可以跳转到别的路由 <router-link> 
  添加 <router-view></router-view>,   <router-view>这个标签会根据不同的路由显示不同的component
  然后将Index.vue导入App.vue 看看布局是否正确


2,布局写完了之后将数据写进template，下载vuex跟redux一样的功能
  npm install vuex@next --save

3,建立store
   store文件夹中的各个文件
   index.ts
   template.ts
   user.ts

4，将 store  放进app当中
  修改main.ts 文件

5，views/index.vue 文件里导入 store里的数据，
5，views/Home.vue 文件里导入store里的数据，

6，views/TemplateDetail.vue 文件里导入store里getters定义的getTemplateById方法。
    components/TemplateList.vue 里面也使用store里定义的类型。
    components/userProfile  里面也使用store里mutations定义的login，logout方法，
    任何组件中都可以使用useStore这个钩子函数来获取store中的值。
    然后让值响应式地反映在组件中

    什么是响应式对象
    “响应式”，是指当数据改变后，Vue 会通知到使用该数据的代码。
    例如，视图渲染中使用了数据，数据改变后，视图也会自动更新。
    例如 components/userProfile.vue文件中使用了store/index.ts 中的 login，logout方法，
    来改变 isLogin的值，值改变，视图也会自动更新。


7，Vue 的 template 中自动补全 ts 语法的设置
    setting.json里添加一条语句："vetur.experimental.templateInterpolationService": true,
    不知为何不行。
