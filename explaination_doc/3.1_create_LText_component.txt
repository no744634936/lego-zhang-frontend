
第10周 2-1 至 2-4 的课程
还没有添加泛型

// 组件制作流程分析

// 首先想一下一般是如何在html文件里表示一行字的
// 一般情况下要在html文件里表示一行字，会写个div，然后在两个div中间些上文字，
// 然后给这个div添加上一些属性，

// 现在我想要的功能是，点击一下按钮就会添加一个什么都没有的div，
// 然后我可以手动输入数据，这个div就会随着输入数据发生相应的改变
// 这个div会被重复使用无数次，那么这个div我就要单独抽离出来做成一个组件，
// 这个组件要能接收,属性跟要表示的文字
// 也就是LText.vue 文件

// 组件需要接收的属性跟文字数据要从哪里来呢？
// 要从两个地方来
// 1,默认的属性
// 自己规定好的默认的属性，也就是点击按钮后出来的空白div要自带哪些属性，defaultProps.ts
// 默认的属性由 所有组件的共有属性 跟 当前组件的特有属性 两个部分组成
// 默认属性里包含组件的 style属性 和 非style的事件属性 和文本
// 所以要将 style属性 和 非style的事件属性 和文本 分开，这就是 componentCommonFunc 函数的功能
// componentCommonFunc 函数将props数据分为 style属性 和 非style的事件属性 和文本
// 然后传给 template 部分进行渲染

// 2,自定义属性
// 数据从store里面来,store里面会存储好几条记录，(store/editor.ts)
// 然后在第三个地方将组件跟数据合在一起，这个地方就是 view/editor.vue 文件
// 循环地将属性数据数据给到LText组件，如果传进来的属性与默认属性同名就替换掉同名属性的值
// componentCommonFunc 函数将props数据分为 style属性 和 非style的事件属性 和文本
// 然后传给 template 部分进行渲染





npm install uuidv4 --save 

建立一个store/editor.ts文件 并将数据导入  view/Editor.vue里去

建立 src/defaultProps.ts文件 

// lodash-es 可以很方便的对object 进行操作
npm i lodash-es --save

//lodash-es的typescript解释文件
npm install --save-dev @types/lodash-es  


//建立 src/defaultProps.ts 文件
  1，所有组件的共有属性
        {
            // actions
            actionType: '',
            url: '',
            // size
            height: '',
            width: '318px',
            ...
        }

  2，文本组件 的特有属性，加上 所有组件的共有属性，就是 文本组件的所有属性了
        {
            text: { type: String, default: '正文内容' },
            fontSize: { type: String, default: '14px' },
            ...
        }

  3，将文本组件的所有属性转化为 LText component的 props
        {
            actionType: '',
            url: '',
            height: '',
            width: '318px',
            ...

            text: { type: String, default: '正文内容' },
            fontSize: { type: String, default: '14px' },
            ...
        }

  4，去掉 "actionType","url","text" 只留保留 文本组件的css 属性，并放进数组


// 建立 components/LText.vue 文件

   5，将 3 跟 4 步的结果导入 LText.vue

   6，从props 里挑选出与css有关的属性跟默认值。
      因为"actionType","url","text" 不可以放进html标签的style属性里
      所以要单独取出来

   7，点击事件单独封装成一个方法

   8, 在template里面使用css 属性，click方法，文本内容


   //在 views/Editor.vue 文件里使用 components/LText.vue 

     9，将store里面的数据给Editor.vue 在由Editor.vue 将数据传给components/LText.vue 

     10，components/LText.vue  将数据显示出来
